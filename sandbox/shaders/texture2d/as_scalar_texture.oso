OpenShadingLanguage 1.00
# Compiled by oslc 1.6.9
shader as_scalar_texture
param	float	U	0		%read{2147483647,-1} %write{0,0} %initexpr
param	float	V	0		%read{2147483647,-1} %write{1,1} %initexpr
param	int	faceid	0		%meta{int,lockgeom,0}  %read{4,4} %write{2147483647,-1}
param	string	Filename	""		%meta{string,widget,"filename"}  %read{2,5} %write{2147483647,-1}
param	string	UWrap	"periodic"		%meta{string,widget,"popup"} %meta{string,options,"default|black|periodic|clamp|mirror"}  %read{4,5} %write{2147483647,-1}
param	string	VWrap	"periodic"		%meta{string,widget,"popup"} %meta{string,options,"default|black|periodic|clamp|mirror"}  %read{4,5} %write{2147483647,-1}
param	string	Filter	"smartcubic"		%meta{string,widget,"popup"} %meta{string,options,"smartcubic|cubic|linear|closest"} %meta{int,divider,1}  %read{2147483647,-1} %write{2147483647,-1}
param	float	UWidth	1		%read{4,5} %write{2147483647,-1}
param	float	VWidth	1		%read{4,5} %write{2147483647,-1}
param	float	UBlur	0		%read{4,5} %write{2147483647,-1}
param	float	VBlur	0		%meta{int,divider,1}  %read{4,5} %write{2147483647,-1}
param	int	Channel	0		%read{4,5} %write{2147483647,-1}
param	int	Invert	0		%meta{string,help,"invert"} %meta{string,widget,"checkBox"}  %read{6,6} %write{2147483647,-1}
oparam	float	FloatOut	0		%read{2147483647,-1} %write{8,9}
global	float	u	%read{0,5} %write{2147483647,-1} %derivs
global	float	v	%read{1,5} %write{2147483647,-1} %derivs
local	color	c	%read{7,9} %write{4,5}
temp	int	$tmp1	%read{3,3} %write{2,2}
const	string	$const1	".ptx"		%read{2,2} %write{2147483647,-1}
const	string	$const2	"subimage"		%read{4,4} %write{2147483647,-1}
const	string	$const3	"swidth"		%read{4,5} %write{2147483647,-1}
const	string	$const4	"twidth"		%read{4,5} %write{2147483647,-1}
const	string	$const5	"sblur"		%read{4,5} %write{2147483647,-1}
const	string	$const6	"tblur"		%read{4,5} %write{2147483647,-1}
const	string	$const7	"swrap"		%read{4,5} %write{2147483647,-1}
const	string	$const8	"twrap"		%read{4,5} %write{2147483647,-1}
const	string	$const9	"firstchannel"		%read{4,5} %write{2147483647,-1}
const	float	$const10	1		%read{8,8} %write{2147483647,-1}
const	int	$const11	0		%read{7,9} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{7,7}
code U
# ./texture2d/as_scalar_texture.osl:31
#     float        U = u,
	assign		U u 	%filename{"./texture2d/as_scalar_texture.osl"} %line{31} %argrw{"wr"}
code V
# ./texture2d/as_scalar_texture.osl:32
#     float        V = v,
	assign		V v 	%filename{"./texture2d/as_scalar_texture.osl"} %line{32} %argrw{"wr"}
code ___main___
# ./texture2d/as_scalar_texture.osl:75
#     if (endswith(Filename, ".ptx"))
	endswith	$tmp1 Filename $const1 	%filename{"./texture2d/as_scalar_texture.osl"} %line{75} %argrw{"wrr"}
	if		$tmp1 5 6 	%argrw{"r"}
# ./texture2d/as_scalar_texture.osl:88
#             "firstchannel", Channel);
	texture		c Filename u v $const2 faceid $const3 UWidth $const4 VWidth $const5 UBlur $const6 VBlur $const7 UWrap $const8 VWrap $const9 Channel 	%line{88} %argrw{"wrrrrrrrrrrrrrrrrrrr"} %argderivs{2,3}
# ./texture2d/as_scalar_texture.osl:102
#             "firstchannel", Channel);
	texture		c Filename u v $const3 UWidth $const4 VWidth $const5 UBlur $const6 VBlur $const7 UWrap $const8 VWrap $const9 Channel 	%line{102} %argrw{"wrrrrrrrrrrrrrrrrr"} %argderivs{2,3}
# ./texture2d/as_scalar_texture.osl:105
#     if (Invert)
	if		Invert 9 10 	%line{105} %argrw{"r"}
# ./texture2d/as_scalar_texture.osl:106
#         FloatOut = 1.0 - c[0];
	compref		$tmp2 c $const11 	%line{106} %argrw{"wrr"}
	sub		FloatOut $const10 $tmp2 	%argrw{"wrr"}
# ./texture2d/as_scalar_texture.osl:108
#         FloatOut = c[0];
	compref		FloatOut c $const11 	%line{108} %argrw{"wrr"}
	end
